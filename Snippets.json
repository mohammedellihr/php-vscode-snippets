{
	"Simple Comment Block":{
	  "prefix":"_note_simple",
	  "body":[
		"/*",
		"|--------------------------------------------------------------------------",
		"| ${1:Comment title}",
		"|--------------------------------------------------------------------------",
		"*/",
		"$0"
	  ],
	  "description":"Simple Comment Block"
	},
	"Extended Comment Block":{
	  "prefix":"_note_extended",
	  "body":[
		"/*",
		"|--------------------------------------------------------------------------",
		"| ${1:Comment title}",
		"|--------------------------------------------------------------------------",
		"|",
		"| ${2:Comment description}",
		"| ",
		"| ",
		"|",
		"*/",
		"$0"
	  ],
	  "description":"Extended Comment Block"
	},
	"PHPDoc Comment Block":{
	  "prefix":"_note_doc",
	  "body":[
		"/**",
		" * ${1:Comment description}.",
		" *",
		" * @param ${2:ParamType} ${3:ParamName}",
		" *",
		" * @return ${4:ReturnType}",
		" */",
		""
	  ],
	  "description":"PHPDoc Comment Block"
	},
	"Namespace Declaration":{
	  "prefix":"_namespace",
	  "body":[
		"namespace ${1:MyNamespace}\\${2:SubNamespace};",
		"$0"
	  ],
	  "description":"PHP Namespace Declaration"
	},
	"Use Statement":{
	  "prefix":"_use",
	  "body":[
		"use ${1:Namespace}\\${2:SubNamespace1}\\${3:SubNamespace2}\\${4:ClassName}${5: as Alias};",
		"$0"
	  ],
	  "description":"PHP Use Statement"
	},
	"Class":{
	  "prefix":"_class",
	  "body":[
		"class ${1:ClassName}",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"PHP Class"
	},
	"Abstract Class":{
	  "prefix":"_abstract_class",
	  "body":[
		"abstract class ${1:AbstractClassName}",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"PHP Abstract Class"
	},
	"Interface":{
	  "prefix":"_interface",
	  "body":[
		"interface ${1:InterfaceName}",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"PHP Interface"
	},
	"Trait":{
	  "prefix":"_trait",
	  "body":[
		"trait ${1:TraitName}",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"PHP Trait"
	},
	"__construct()":{
	  "prefix":"_construct",
	  "body":[
		"public function __construct($${1:$args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"PHP __construct()"
	},

	"Public Function":{
	  "prefix":"_public_function",
	  "body":[
		"public function ${1:methodName}($${2:args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"Public Function"
	},
	"Private Function":{
	  "prefix":"_private_function",
	  "body":[
		"private function ${1:methodName}($${2:args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"Private Function"
	},
	"Protected Function":{
	"prefix":"_protected_function",
	  "body":[
		"protected function ${1:methodName}($${2:args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"Protected Function"
	},

	"Public Static Function":{
	  "prefix":"_public_static_function",
	  "body":[
		"public static function ${1:methodName}($${2:args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"Public Static Function"
	},
	"Private Static Function":{
	  "prefix":"_private_static_function",
	  "body":[
		"private static function ${1:methodName}($${2:args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"Private Static Function"
	},
	"Protected Static Function":{
	  "prefix":"_protected_static_function",
	  "body":[
		"protected static function ${1:methodName}($${2:args})",
		"{",
		"\t$0",
		"}"
	  ],
	  "description":"Protected Static Function"
	},

	"Public Static Property":{
		"prefix":"_public_static_property",
		"body":[
		  "public static $$1;"
		],
		"description":"public Static Property"
	  },
	  "Protected Static Property":{
		"prefix":"_protected_static_property",
		"body":[
		  "protected static $$1;"
		],
		"description":"Protected Static Property"
	  },
	"Private Static Property":{
	  "prefix":"_private_static_property",
	  "body":[
		"private static $$1;"
	  ],
	  "description":"Private Static Property"
	},


	"If Statement":{
	  "prefix":"_if",
	  "body":[
		"if (${1:condition}) {",
		"\t$0",
		"}"
	  ],
	  "description":"PHP if statement"
	},
	"If Else Statement":{
	  "prefix":"_ifelse",
	  "body":[
		"if (${1:condition}) {",
		"\t$0",
		"} else {",
		"\t",
		"}"
	  ],
	  "description":"PHP if...else statement"
	},
	"Isset Function":{
	  "prefix":"_isset",
	  "body":[
		"isset(${1:variable}) $0"
	  ],
	  "description":"PHP isset() function"
	},
	"Empty Function":{
	  "prefix":"_empty",
	  "body":[
		"empty(${1:variable}) $0"
	  ],
	  "description":"PHP empty() function"
	},
	"Count Function":{
	  "prefix":"_count",
	  "body":[
		"count(${1:array_or_countable}) $0"
	  ],
	  "description":"PHP count() function"
	},
	"Foreach Loop":{
	  "prefix":"_foreach",
	  "body":[
		"foreach ($${1:array} as $${2:value}) {",
		"\t$0",
		"}"
	  ],
	  "description":"PHP foreach loop"
	},
	"While Loop":{
	  "prefix":"_while",
	  "body":[
		"while ($${1:condition}) {",
		"\t$0",
		"}"
	  ],
	  "description":"PHP while loop"
	},
	"Do While Loop":{
	  "prefix":"_dowhile",
	  "body":[
		"do {",
		"\t$0",
		"} while ($${1:condition});"
	  ],
	  "description":"PHP do...while loop"
	},
	"For Loop":{
	  "prefix":"_for",
	  "body":[
		"for ($${1:init}; $${2:condition}; $${3:increment}) {",
		"\t$0",
		"}"
	  ],
	  "description":"PHP for loop"
	},
	"Return Statement":{
	  "prefix":"_return",
	  "body":[
		"return $${1:value};"
	  ],
	  "description":"PHP return statement"
	},
	"Define Constant":{
	  "prefix":"_define",
	  "body":[
		"define('${1:CONSTANT_NAME}', $${2:value});"
	  ],
	  "description":"PHP define constant"
	},
	"Array Declaration":{
	  "prefix":"_array",
	  "body":[
		"$${1:variable} = [$${2:values}];"
	  ],
	  "description":"PHP array declaration"
	},
	"Try-Catch Block":{
	  "prefix":[
		"try ()"
	  ],
	  "body":[
		"try {",
		"\t$1",
		"} catch (mysqli_sql_exception | PDOException | RuntimeException | Exception | Error | Throwable $$e) {",
		"\t$2",
		"}"
	  ],
	  "description":"Creates a try-catch block for exception handling."
	}
  }
